---
title: "Day 2 Interactive Lessons"
format: html
editor: visual
execute: 
  warning: FALSE
---

## Making and Indexing data in R

### Vectors

Making Vectors

```{r}
dogs <- c("teddy", "khora", "waffle", "banjo", "tallie")

# check class of 'dogs'
typeof(dogs)
class(dogs)
```

```{r}
my_breakfast <- c("waffle", 2, TRUE, "coffee")

# will say character because character is the most flexible class
typeof(my_breakfast)
class(my_breakfast)
```

```{r}
weights <- c(50, 60, 25, 35, 55)

typeof(weights) # returns 'double'
class(weights) # returns numeric because its overall class

weights_integer <- c(50L, 60L, 25L, 35L, 55L) # coerce to integer 

typeof(weights_integer) # returns integer
class(weights_integer) # returns integer
```

```{r}
zipcodes <- c(93105, 98732, 009888, 928290)

class(zipcodes) # returns numeric

# use as. to retype data classes
# use is. to ASK what class something is

zipcodes_chr <- as.character(zipcodes)

class(zipcodes_chr) # returns character
```

## Create vector with names elements

```{r}
dog_foods <- c(teddy = "yay", khora = "poo", waffle = "fire", banjo = "rocks", tallie = "acorn")

class(dog_foods)

dog_rate <- c(teddy = 1, khora = 2, waffle = 3, banjo = 4, tallie = 5)

class(dog_rate) # return numeric
```

```{r}
# access an elements value using []
# R uses 1-index
# Python and Java Script use 0-indexing (have to use [1] to access position 2)

dog_foods[2] 

dog_foods["khora"] # will also access value of element using name
```

### Access ranges of values in a vector

Use : to refer to a range (low : high)

```{r}
trees <- c("oop", "hi", "no", "fi", "fy", "fo", "fum")

trees[3] # access third posiiton in string

# range of values from position 3 to 5
trees[3:5]
```

## Warm-up for 'for' loops

Iterate over each value of a vector, and return something new!

```{r}
i <- 4 # creating an index
trees[i]
```

```{r}
i <- seq(1:3)
trees[i]
```

### Muteable - change what is stored

```{r}
trees[3] <- "oak" # reassigned value based on the position

trees
```

## Made a new branch

=======

## Make changes in branch

Use git branch to check what branch you're working in.

### Matrix Indexing

```{r}
fish_size <- matrix(c(1.3, 2.4, 3.5, 5.4),

ncol = 2,

nrow = 2,

byrow = FALSE)

class(fish_size)

str(fish_size)

typeof(fish_size)

fish_size[2,2]

fish_size[,2] # returns all values in second column
```
